//////////////////////////////////////////////////////////////////////////////////////////
// File:            ThreadMan.cpp
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Source file for the ThreadMan class.
// Project:         Retro Terrain Engine
// Author(s):
//
//

//////////////////////////////////////////////////////////////////////////////////////////
// Inclusions of header files

#include "ThreadMan.h"

using namespace std;

namespace RTE {

	//////////////////////////////////////////////////////////////////////////////////////////
	// Method:          Clear
	//////////////////////////////////////////////////////////////////////////////////////////
	// Description:     Clears all the member variables of this ThreadMan, effectively
	//                  resetting the members of this abstraction level only.

	void ThreadMan::Clear() {
		m_PriorityThreadPool.reset();
		m_BackgroundThreadPool.reset(std::thread::hardware_concurrency() / 2);
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	// Method:          Create
	//////////////////////////////////////////////////////////////////////////////////////////
	// Description:     Makes the ThreadMan object ready for use.

	int ThreadMan::Create() {
		return 0;
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	// Method:          Destroy
	//////////////////////////////////////////////////////////////////////////////////////////
	// Description:     Destroys and resets (through Clear()) the ThreadMan object.

	void ThreadMan::Destroy() {
		Clear();
	}

} // namespace RTE