// Make sure that binding definition files are always set to NOT use pre-compiled headers and conformance mode (/permissive) otherwise everything will be on fire!

#include "LuaBindingRegisterDefinitions.h"

#include "Constants.h"

#include "SDL_scancode.h"
#include "SDL_keycode.h"
#include "SDL_gamecontroller.h"

namespace RTE {

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, InputDevice) {
		auto luaType = EnumTypeLuaClassDefinition(InputDevice, "InputDevice", {{"DEVICE_KEYB_ONLY", InputDevice::DEVICE_KEYB_ONLY}, {"DEVICE_MOUSE_KEYB", InputDevice::DEVICE_MOUSE_KEYB}, {"DEVICE_GAMEPAD_1", InputDevice::DEVICE_GAMEPAD_1}, {"DEVICE_GAMEPAD_2", InputDevice::DEVICE_GAMEPAD_2}, {"DEVICE_GAMEPAD_3", InputDevice::DEVICE_GAMEPAD_3}, {"DEVICE_GAMEPAD_4", InputDevice::DEVICE_GAMEPAD_4}, {"DEVICE_COUNT", InputDevice::DEVICE_COUNT}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, InputElements) {
		auto luaType = EnumTypeLuaClassDefinition(InputElements, "InputElements", {{"INPUT_L_UP", InputElements::INPUT_L_UP}, {"INPUT_L_DOWN", InputElements::INPUT_L_DOWN}, {"INPUT_L_LEFT", InputElements::INPUT_L_LEFT}, {"INPUT_L_RIGHT", InputElements::INPUT_L_RIGHT}, {"INPUT_R_UP", InputElements::INPUT_R_UP}, {"INPUT_R_DOWN", InputElements::INPUT_R_DOWN}, {"INPUT_R_LEFT", InputElements::INPUT_R_LEFT}, {"INPUT_R_RIGHT", InputElements::INPUT_R_RIGHT}, {"INPUT_FIRE", InputElements::INPUT_FIRE}, {"INPUT_AIM", InputElements::INPUT_AIM}, {"INPUT_AIM_UP", InputElements::INPUT_AIM_UP}, {"INPUT_AIM_DOWN", InputElements::INPUT_AIM_DOWN}, {"INPUT_AIM_LEFT", InputElements::INPUT_AIM_LEFT}, {"INPUT_AIM_RIGHT", InputElements::INPUT_AIM_RIGHT}, {"INPUT_PIEMENU_ANALOG", InputElements::INPUT_PIEMENU_ANALOG}, {"INPUT_PIEMENU_DIGITAL", InputElements::INPUT_PIEMENU_DIGITAL}, {"INPUT_JUMP", InputElements::INPUT_JUMP}, {"INPUT_CROUCH", InputElements::INPUT_CROUCH}, {"INPUT_NEXT", InputElements::INPUT_NEXT}, {"INPUT_PREV", InputElements::INPUT_PREV}, {"INPUT_START", InputElements::INPUT_START}, {"INPUT_BACK", InputElements::INPUT_BACK}, {"INPUT_COUNT", InputElements::INPUT_COUNT}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, MouseButtons) {
		auto luaType = EnumTypeLuaClassDefinition(MouseButtons, "MouseButtons", {{"MOUSE_NONE", MouseButtons::MOUSE_NONE}, {"MOUSE_LEFT", MouseButtons::MOUSE_LEFT}, {"MOUSE_RIGHT", MouseButtons::MOUSE_RIGHT}, {"MOUSE_MIDDLE", MouseButtons::MOUSE_MIDDLE}, {"MAX_MOUSE_BUTTONS", MouseButtons::MAX_MOUSE_BUTTONS}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, JoyButtons) {
		auto luaType = EnumTypeLuaClassDefinition(JoyButtons, "JoyButtons", {{"JOY_NONE", JoyButtons::JOY_NONE}, {"JOY_1", JoyButtons::JOY_1}, {"JOY_2", JoyButtons::JOY_2}, {"JOY_3", JoyButtons::JOY_3}, {"JOY_4", JoyButtons::JOY_4}, {"JOY_5", JoyButtons::JOY_5}, {"JOY_6", JoyButtons::JOY_6}, {"JOY_7", JoyButtons::JOY_7}, {"JOY_8", JoyButtons::JOY_8}, {"JOY_9", JoyButtons::JOY_9}, {"JOY_10", JoyButtons::JOY_10}, {"JOY_11", JoyButtons::JOY_11}, {"JOY_12", JoyButtons::JOY_12}, {"MAX_JOY_BUTTONS", JoyButtons::MAX_JOY_BUTTONS}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, JoyDirections) {
		auto luaType = EnumTypeLuaClassDefinition(JoyDirections, "JoyDirections", {{"JOYDIR_ONE", JoyDirections::JOYDIR_ONE}, {"JOYDIR_TWO", JoyDirections::JOYDIR_TWO}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, SDL_Keycode) {
		// Make sure to update https://github.com/cortex-command-community/Cortex-Command-Community-Project-Source/wiki/SDL-Keycode-and-Scancode-enum-values-in-Lua#key-codes if any changes are made.
		auto luaType = EnumTypeLuaClassDefinition(SDL_Keycode, "Key", {{"UNKNOWN", SDLK_UNKNOWN}, {"RETURN", SDLK_RETURN}, {"ESCAPE", SDLK_ESCAPE}, {"BACKSPACE", SDLK_BACKSPACE}, {"TAB", SDLK_TAB}, {"SPACE", SDLK_SPACE}, {"EXCLAIM", SDLK_EXCLAIM}, {"QUOTEDBL", SDLK_QUOTEDBL}, {"HASH", SDLK_HASH}, {"PERCENT", SDLK_PERCENT}, {"DOLLAR", SDLK_DOLLAR}, {"AMPERSAND", SDLK_AMPERSAND}, {"QUOTE", SDLK_QUOTE}, {"LEFTPAREN", SDLK_LEFTPAREN}, {"RIGHTPAREN", SDLK_RIGHTPAREN}, {"ASTERISK", SDLK_ASTERISK}, {"PLUS", SDLK_PLUS}, {"COMMA", SDLK_COMMA}, {"MINUS", SDLK_MINUS}, {"PERIOD", SDLK_PERIOD}, {"SLASH", SDLK_SLASH}, {"K_0", SDLK_0}, {"K_1", SDLK_1}, {"K_2", SDLK_2}, {"K_3", SDLK_3}, {"K_4", SDLK_4}, {"K_5", SDLK_5}, {"K_6", SDLK_6}, {"K_7", SDLK_7}, {"K_8", SDLK_8}, {"K_9", SDLK_9}, {"COLON", SDLK_COLON}, {"SEMICOLON", SDLK_SEMICOLON}, {"LESS", SDLK_LESS}, {"EQUALS", SDLK_EQUALS}, {"GREATER", SDLK_GREATER}, {"QUESTION", SDLK_QUESTION}, {"AT", SDLK_AT}, {"LEFTBRACKET", SDLK_LEFTBRACKET}, {"BACKSLASH", SDLK_BACKSLASH}, {"RIGHTBRACKET", SDLK_RIGHTBRACKET}, {"CARET", SDLK_CARET}, {"UNDERSCORE", SDLK_UNDERSCORE}, {"BACKQUOTE", SDLK_BACKQUOTE}, {"A", SDLK_a}, {"B", SDLK_b}, {"C", SDLK_c}, {"D", SDLK_d}, {"E", SDLK_e}, {"F", SDLK_f}, {"G", SDLK_g}, {"H", SDLK_h}, {"I", SDLK_i}, {"J", SDLK_j}, {"K", SDLK_k}, {"L", SDLK_l}, {"M", SDLK_m}, {"N", SDLK_n}, {"O", SDLK_o}, {"P", SDLK_p}, {"Q", SDLK_q}, {"R", SDLK_r}, {"S", SDLK_s}, {"T", SDLK_t}, {"U", SDLK_u}, {"V", SDLK_v}, {"W", SDLK_w}, {"X", SDLK_x}, {"Y", SDLK_y}, {"Z", SDLK_z}, {"CAPSLOCK", SDLK_CAPSLOCK}, {"F1", SDLK_F1}, {"F2", SDLK_F2}, {"F3", SDLK_F3}, {"F4", SDLK_F4}, {"F5", SDLK_F5}, {"F6", SDLK_F6}, {"F7", SDLK_F7}, {"F8", SDLK_F8}, {"F9", SDLK_F9}, {"F10", SDLK_F10}, {"F11", SDLK_F11}, {"F12", SDLK_F12}, {"PRINTSCREEN", SDLK_PRINTSCREEN}, {"SCROLLLOCK", SDLK_SCROLLLOCK}, {"PAUSE", SDLK_PAUSE}, {"INSERT", SDLK_INSERT}, {"HOME", SDLK_HOME}, {"PAGEUP", SDLK_PAGEUP}, {"DELETE", SDLK_DELETE}, {"END", SDLK_END}, {"PAGEDOWN", SDLK_PAGEDOWN}, {"RIGHT", SDLK_RIGHT}, {"LEFT", SDLK_LEFT}, {"DOWN", SDLK_DOWN}, {"UP", SDLK_UP}, {"NUMLOCKCLEAR", SDLK_NUMLOCKCLEAR}, {"KP_DIVIDE", SDLK_KP_DIVIDE}, {"KP_MULTIPLY", SDLK_KP_MULTIPLY}, {"KP_MINUS", SDLK_KP_MINUS}, {"KP_PLUS", SDLK_KP_PLUS}, {"KP_ENTER", SDLK_KP_ENTER}, {"KP_1", SDLK_KP_1}, {"KP_2", SDLK_KP_2}, {"KP_3", SDLK_KP_3}, {"KP_4", SDLK_KP_4}, {"KP_5", SDLK_KP_5}, {"KP_6", SDLK_KP_6}, {"KP_7", SDLK_KP_7}, {"KP_8", SDLK_KP_8}, {"KP_9", SDLK_KP_9}, {"KP_0", SDLK_KP_0}, {"KP_PERIOD", SDLK_KP_PERIOD}, {"APPLICATION", SDLK_APPLICATION}, {"POWER", SDLK_POWER}, {"KP_EQUALS", SDLK_KP_EQUALS}, {"F13", SDLK_F13}, {"F14", SDLK_F14}, {"F15", SDLK_F15}, {"F16", SDLK_F16}, {"F17", SDLK_F17}, {"F18", SDLK_F18}, {"F19", SDLK_F19}, {"F20", SDLK_F20}, {"F21", SDLK_F21}, {"F22", SDLK_F22}, {"F23", SDLK_F23}, {"F24", SDLK_F24}, {"EXECUTE", SDLK_EXECUTE}, {"HELP", SDLK_HELP}, {"MENU", SDLK_MENU}, {"SELECT", SDLK_SELECT}, {"STOP", SDLK_STOP}, {"AGAIN", SDLK_AGAIN}, {"UNDO", SDLK_UNDO}, {"CUT", SDLK_CUT}, {"COPY", SDLK_COPY}, {"PASTE", SDLK_PASTE}, {"FIND", SDLK_FIND}, {"MUTE", SDLK_MUTE}, {"VOLUMEUP", SDLK_VOLUMEUP}, {"VOLUMEDOWN", SDLK_VOLUMEDOWN}, {"KP_COMMA", SDLK_KP_COMMA}, {"KP_EQUALSAS400", SDLK_KP_EQUALSAS400}, {"ALTERASE", SDLK_ALTERASE}, {"SYSREQ", SDLK_SYSREQ}, {"CANCEL", SDLK_CANCEL}, {"CLEAR", SDLK_CLEAR}, {"PRIOR", SDLK_PRIOR}, {"RETURN2", SDLK_RETURN2}, {"SEPARATOR", SDLK_SEPARATOR}, {"OUT", SDLK_OUT}, {"OPER", SDLK_OPER}, {"CLEARAGAIN", SDLK_CLEARAGAIN}, {"CRSEL", SDLK_CRSEL}, {"EXSEL", SDLK_EXSEL}, {"KP_00", SDLK_KP_00}, {"KP_000", SDLK_KP_000}, {"THOUSANDSSEPARATOR", SDLK_THOUSANDSSEPARATOR}, {"DECIMALSEPARATOR", SDLK_DECIMALSEPARATOR}, {"CURRENCYUNIT", SDLK_CURRENCYUNIT}, {"CURRENCYSUBUNIT", SDLK_CURRENCYSUBUNIT}, {"KP_LEFTPAREN", SDLK_KP_LEFTPAREN}, {"KP_RIGHTPAREN", SDLK_KP_RIGHTPAREN}, {"KP_LEFTBRACE", SDLK_KP_LEFTBRACE}, {"KP_RIGHTBRACE", SDLK_KP_RIGHTBRACE}, {"KP_TAB", SDLK_KP_TAB}, {"KP_BACKSPACE", SDLK_KP_BACKSPACE}, {"KP_A", SDLK_KP_A}, {"KP_B", SDLK_KP_B}, {"KP_C", SDLK_KP_C}, {"KP_D", SDLK_KP_D}, {"KP_E", SDLK_KP_E}, {"KP_F", SDLK_KP_F}, {"KP_XOR", SDLK_KP_XOR}, {"KP_POWER", SDLK_KP_POWER}, {"KP_PERCENT", SDLK_KP_PERCENT}, {"KP_LESS", SDLK_KP_LESS}, {"KP_GREATER", SDLK_KP_GREATER}, {"KP_AMPERSAND", SDLK_KP_AMPERSAND}, {"KP_DBLAMPERSAND", SDLK_KP_DBLAMPERSAND}, {"KP_VERTICALBAR", SDLK_KP_VERTICALBAR}, {"KP_DBLVERTICALBAR", SDLK_KP_DBLVERTICALBAR}, {"KP_COLON", SDLK_KP_COLON}, {"KP_HASH", SDLK_KP_HASH}, {"KP_SPACE", SDLK_KP_SPACE}, {"KP_AT", SDLK_KP_AT}, {"KP_EXCLAM", SDLK_KP_EXCLAM}, {"KP_MEMSTORE", SDLK_KP_MEMSTORE}, {"KP_MEMRECALL", SDLK_KP_MEMRECALL}, {"KP_MEMCLEAR", SDLK_KP_MEMCLEAR}, {"KP_MEMADD", SDLK_KP_MEMADD}, {"KP_MEMSUBTRACT", SDLK_KP_MEMSUBTRACT}, {"KP_MEMMULTIPLY", SDLK_KP_MEMMULTIPLY}, {"KP_MEMDIVIDE", SDLK_KP_MEMDIVIDE}, {"KP_PLUSMINUS", SDLK_KP_PLUSMINUS}, {"KP_CLEAR", SDLK_KP_CLEAR}, {"KP_CLEARENTRY", SDLK_KP_CLEARENTRY}, {"KP_BINARY", SDLK_KP_BINARY}, {"KP_OCTAL", SDLK_KP_OCTAL}, {"KP_DECIMAL", SDLK_KP_DECIMAL}, {"KP_HEXADECIMAL", SDLK_KP_HEXADECIMAL}, {"LCTRL", SDLK_LCTRL}, {"LSHIFT", SDLK_LSHIFT}, {"LALT", SDLK_LALT}, {"LGUI", SDLK_LGUI}, {"RCTRL", SDLK_RCTRL}, {"RSHIFT", SDLK_RSHIFT}, {"RALT", SDLK_RALT}, {"RGUI", SDLK_RGUI}, {"MODE", SDLK_MODE}, {"AUDIONEXT", SDLK_AUDIONEXT}, {"AUDIOPREV", SDLK_AUDIOPREV}, {"AUDIOSTOP", SDLK_AUDIOSTOP}, {"AUDIOPLAY", SDLK_AUDIOPLAY}, {"AUDIOMUTE", SDLK_AUDIOMUTE}, {"MEDIASELECT", SDLK_MEDIASELECT}, {"WWW", SDLK_WWW}, {"MAIL", SDLK_MAIL}, {"CALCULATOR", SDLK_CALCULATOR}, {"COMPUTER", SDLK_COMPUTER}, {"AC_SEARCH", SDLK_AC_SEARCH}, {"AC_HOME", SDLK_AC_HOME}, {"AC_BACK", SDLK_AC_BACK}, {"AC_FORWARD", SDLK_AC_FORWARD}, {"AC_STOP", SDLK_AC_STOP}, {"AC_REFRESH", SDLK_AC_REFRESH}, {"AC_BOOKMARKS", SDLK_AC_BOOKMARKS}, {"BRIGHTNESSDOWN", SDLK_BRIGHTNESSDOWN}, {"BRIGHTNESSUP", SDLK_BRIGHTNESSUP}, {"DISPLAYSWITCH", SDLK_DISPLAYSWITCH}, {"KBDILLUMTOGGLE", SDLK_KBDILLUMTOGGLE}, {"KBDILLUMDOWN", SDLK_KBDILLUMDOWN}, {"KBDILLUMUP", SDLK_KBDILLUMUP}, {"EJECT", SDLK_EJECT}, {"SLEEP", SDLK_SLEEP}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, SDL_Scancode) {
		// Make sure to update https://github.com/cortex-command-community/Cortex-Command-Community-Project-Source/wiki/SDL-Keycode-and-Scancode-enum-values-in-Lua#scan-codes if any changes are made.
		auto luaType = EnumTypeLuaClassDefinition(SDL_Scancode, "Scancode", {{"UNKNOWN", SDL_SCANCODE_UNKNOWN}, {"A", SDL_SCANCODE_A}, {"B", SDL_SCANCODE_B}, {"C", SDL_SCANCODE_C}, {"D", SDL_SCANCODE_D}, {"E", SDL_SCANCODE_E}, {"F", SDL_SCANCODE_F}, {"G", SDL_SCANCODE_G}, {"H", SDL_SCANCODE_H}, {"I", SDL_SCANCODE_I}, {"J", SDL_SCANCODE_J}, {"K", SDL_SCANCODE_K}, {"L", SDL_SCANCODE_L}, {"M", SDL_SCANCODE_M}, {"N", SDL_SCANCODE_N}, {"O", SDL_SCANCODE_O}, {"P", SDL_SCANCODE_P}, {"Q", SDL_SCANCODE_Q}, {"R", SDL_SCANCODE_R}, {"S", SDL_SCANCODE_S}, {"T", SDL_SCANCODE_T}, {"U", SDL_SCANCODE_U}, {"V", SDL_SCANCODE_V}, {"W", SDL_SCANCODE_W}, {"X", SDL_SCANCODE_X}, {"Y", SDL_SCANCODE_Y}, {"Z", SDL_SCANCODE_Z}, {"K_1", SDL_SCANCODE_1}, {"K_2", SDL_SCANCODE_2}, {"K_3", SDL_SCANCODE_3}, {"K_4", SDL_SCANCODE_4}, {"K_5", SDL_SCANCODE_5}, {"K_6", SDL_SCANCODE_6}, {"K_7", SDL_SCANCODE_7}, {"K_8", SDL_SCANCODE_8}, {"K_9", SDL_SCANCODE_9}, {"K_0", SDL_SCANCODE_0}, {"RETURN", SDL_SCANCODE_RETURN}, {"ESCAPE", SDL_SCANCODE_ESCAPE}, {"BACKSPACE", SDL_SCANCODE_BACKSPACE}, {"TAB", SDL_SCANCODE_TAB}, {"SPACE", SDL_SCANCODE_SPACE}, {"MINUS", SDL_SCANCODE_MINUS}, {"EQUALS", SDL_SCANCODE_EQUALS}, {"LEFTBRACKET", SDL_SCANCODE_LEFTBRACKET}, {"RIGHTBRACKET", SDL_SCANCODE_RIGHTBRACKET}, {"BACKSLASH", SDL_SCANCODE_BACKSLASH}, {"NONUSHASH", SDL_SCANCODE_NONUSHASH}, {"SEMICOLON", SDL_SCANCODE_SEMICOLON}, {"APOSTROPHE", SDL_SCANCODE_APOSTROPHE}, {"GRAVE", SDL_SCANCODE_GRAVE}, {"COMMA", SDL_SCANCODE_COMMA}, {"PERIOD", SDL_SCANCODE_PERIOD}, {"SLASH", SDL_SCANCODE_SLASH}, {"CAPSLOCK", SDL_SCANCODE_CAPSLOCK}, {"F1", SDL_SCANCODE_F1}, {"F2", SDL_SCANCODE_F2}, {"F3", SDL_SCANCODE_F3}, {"F4", SDL_SCANCODE_F4}, {"F5", SDL_SCANCODE_F5}, {"F6", SDL_SCANCODE_F6}, {"F7", SDL_SCANCODE_F7}, {"F8", SDL_SCANCODE_F8}, {"F9", SDL_SCANCODE_F9}, {"F10", SDL_SCANCODE_F10}, {"F11", SDL_SCANCODE_F11}, {"F12", SDL_SCANCODE_F12}, {"PRINTSCREEN", SDL_SCANCODE_PRINTSCREEN}, {"SCROLLLOCK", SDL_SCANCODE_SCROLLLOCK}, {"PAUSE", SDL_SCANCODE_PAUSE}, {"INSERT", SDL_SCANCODE_INSERT}, {"HOME", SDL_SCANCODE_HOME}, {"PAGEUP", SDL_SCANCODE_PAGEUP}, {"DELETE", SDL_SCANCODE_DELETE}, {"END", SDL_SCANCODE_END}, {"PAGEDOWN", SDL_SCANCODE_PAGEDOWN}, {"RIGHT", SDL_SCANCODE_RIGHT}, {"LEFT", SDL_SCANCODE_LEFT}, {"DOWN", SDL_SCANCODE_DOWN}, {"UP", SDL_SCANCODE_UP}, {"NUMLOCKCLEAR", SDL_SCANCODE_NUMLOCKCLEAR}, {"KP_DIVIDE", SDL_SCANCODE_KP_DIVIDE}, {"KP_MULTIPLY", SDL_SCANCODE_KP_MULTIPLY}, {"KP_MINUS", SDL_SCANCODE_KP_MINUS}, {"KP_PLUS", SDL_SCANCODE_KP_PLUS}, {"KP_ENTER", SDL_SCANCODE_KP_ENTER}, {"KP_1", SDL_SCANCODE_KP_1}, {"KP_2", SDL_SCANCODE_KP_2}, {"KP_3", SDL_SCANCODE_KP_3}, {"KP_4", SDL_SCANCODE_KP_4}, {"KP_5", SDL_SCANCODE_KP_5}, {"KP_6", SDL_SCANCODE_KP_6}, {"KP_7", SDL_SCANCODE_KP_7}, {"KP_8", SDL_SCANCODE_KP_8}, {"KP_9", SDL_SCANCODE_KP_9}, {"KP_0", SDL_SCANCODE_KP_0}, {"KP_PERIOD", SDL_SCANCODE_KP_PERIOD}, {"NONUSBACKSLASH", SDL_SCANCODE_NONUSBACKSLASH}, {"APPLICATION", SDL_SCANCODE_APPLICATION}, {"POWER", SDL_SCANCODE_POWER}, {"KP_EQUALS", SDL_SCANCODE_KP_EQUALS}, {"F13", SDL_SCANCODE_F13}, {"F14", SDL_SCANCODE_F14}, {"F15", SDL_SCANCODE_F15}, {"F16", SDL_SCANCODE_F16}, {"F17", SDL_SCANCODE_F17}, {"F18", SDL_SCANCODE_F18}, {"F19", SDL_SCANCODE_F19}, {"F20", SDL_SCANCODE_F20}, {"F21", SDL_SCANCODE_F21}, {"F22", SDL_SCANCODE_F22}, {"F23", SDL_SCANCODE_F23}, {"F24", SDL_SCANCODE_F24}, {"EXECUTE", SDL_SCANCODE_EXECUTE}, {"HELP", SDL_SCANCODE_HELP}, {"MENU", SDL_SCANCODE_MENU}, {"SELECT", SDL_SCANCODE_SELECT}, {"STOP", SDL_SCANCODE_STOP}, {"AGAIN", SDL_SCANCODE_AGAIN}, {"UNDO", SDL_SCANCODE_UNDO}, {"CUT", SDL_SCANCODE_CUT}, {"COPY", SDL_SCANCODE_COPY}, {"PASTE", SDL_SCANCODE_PASTE}, {"FIND", SDL_SCANCODE_FIND}, {"MUTE", SDL_SCANCODE_MUTE}, {"VOLUMEUP", SDL_SCANCODE_VOLUMEUP}, {"VOLUMEDOWN", SDL_SCANCODE_VOLUMEDOWN}, {"KP_COMMA", SDL_SCANCODE_KP_COMMA}, {"KP_EQUALSAS400", SDL_SCANCODE_KP_EQUALSAS400}, {"INTERNATIONAL1", SDL_SCANCODE_INTERNATIONAL1}, {"INTERNATIONAL2", SDL_SCANCODE_INTERNATIONAL2}, {"INTERNATIONAL3", SDL_SCANCODE_INTERNATIONAL3}, {"INTERNATIONAL4", SDL_SCANCODE_INTERNATIONAL4}, {"INTERNATIONAL5", SDL_SCANCODE_INTERNATIONAL5}, {"INTERNATIONAL6", SDL_SCANCODE_INTERNATIONAL6}, {"INTERNATIONAL7", SDL_SCANCODE_INTERNATIONAL7}, {"INTERNATIONAL8", SDL_SCANCODE_INTERNATIONAL8}, {"INTERNATIONAL9", SDL_SCANCODE_INTERNATIONAL9}, {"LANG1", SDL_SCANCODE_LANG1}, {"LANG2", SDL_SCANCODE_LANG2}, {"LANG3", SDL_SCANCODE_LANG3}, {"LANG4", SDL_SCANCODE_LANG4}, {"LANG5", SDL_SCANCODE_LANG5}, {"LANG6", SDL_SCANCODE_LANG6}, {"LANG7", SDL_SCANCODE_LANG7}, {"LANG8", SDL_SCANCODE_LANG8}, {"LANG9", SDL_SCANCODE_LANG9}, {"ALTERASE", SDL_SCANCODE_ALTERASE}, {"SYSREQ", SDL_SCANCODE_SYSREQ}, {"CANCEL", SDL_SCANCODE_CANCEL}, {"CLEAR", SDL_SCANCODE_CLEAR}, {"PRIOR", SDL_SCANCODE_PRIOR}, {"RETURN2", SDL_SCANCODE_RETURN2}, {"SEPARATOR", SDL_SCANCODE_SEPARATOR}, {"OUT", SDL_SCANCODE_OUT}, {"OPER", SDL_SCANCODE_OPER}, {"CLEARAGAIN", SDL_SCANCODE_CLEARAGAIN}, {"CRSEL", SDL_SCANCODE_CRSEL}, {"EXSEL", SDL_SCANCODE_EXSEL}, {"KP_00", SDL_SCANCODE_KP_00}, {"KP_000", SDL_SCANCODE_KP_000}, {"THOUSANDSSEPARATOR", SDL_SCANCODE_THOUSANDSSEPARATOR}, {"DECIMALSEPARATOR", SDL_SCANCODE_DECIMALSEPARATOR}, {"CURRENCYUNIT", SDL_SCANCODE_CURRENCYUNIT}, {"CURRENCYSUBUNIT", SDL_SCANCODE_CURRENCYSUBUNIT}, {"KP_LEFTPAREN", SDL_SCANCODE_KP_LEFTPAREN}, {"KP_RIGHTPAREN", SDL_SCANCODE_KP_RIGHTPAREN}, {"KP_LEFTBRACE", SDL_SCANCODE_KP_LEFTBRACE}, {"KP_RIGHTBRACE", SDL_SCANCODE_KP_RIGHTBRACE}, {"KP_TAB", SDL_SCANCODE_KP_TAB}, {"KP_BACKSPACE", SDL_SCANCODE_KP_BACKSPACE}, {"KP_A", SDL_SCANCODE_KP_A}, {"KP_B", SDL_SCANCODE_KP_B}, {"KP_C", SDL_SCANCODE_KP_C}, {"KP_D", SDL_SCANCODE_KP_D}, {"KP_E", SDL_SCANCODE_KP_E}, {"KP_F", SDL_SCANCODE_KP_F}, {"KP_XOR", SDL_SCANCODE_KP_XOR}, {"KP_POWER", SDL_SCANCODE_KP_POWER}, {"KP_PERCENT", SDL_SCANCODE_KP_PERCENT}, {"KP_LESS", SDL_SCANCODE_KP_LESS}, {"KP_GREATER", SDL_SCANCODE_KP_GREATER}, {"KP_AMPERSAND", SDL_SCANCODE_KP_AMPERSAND}, {"KP_DBLAMPERSAND", SDL_SCANCODE_KP_DBLAMPERSAND}, {"KP_VERTICALBAR", SDL_SCANCODE_KP_VERTICALBAR}, {"KP_DBLVERTICALBAR", SDL_SCANCODE_KP_DBLVERTICALBAR}, {"KP_COLON", SDL_SCANCODE_KP_COLON}, {"KP_HASH", SDL_SCANCODE_KP_HASH}, {"KP_SPACE", SDL_SCANCODE_KP_SPACE}, {"KP_AT", SDL_SCANCODE_KP_AT}, {"KP_EXCLAM", SDL_SCANCODE_KP_EXCLAM}, {"KP_MEMSTORE", SDL_SCANCODE_KP_MEMSTORE}, {"KP_MEMRECALL", SDL_SCANCODE_KP_MEMRECALL}, {"KP_MEMCLEAR", SDL_SCANCODE_KP_MEMCLEAR}, {"KP_MEMADD", SDL_SCANCODE_KP_MEMADD}, {"KP_MEMSUBTRACT", SDL_SCANCODE_KP_MEMSUBTRACT}, {"KP_MEMMULTIPLY", SDL_SCANCODE_KP_MEMMULTIPLY}, {"KP_MEMDIVIDE", SDL_SCANCODE_KP_MEMDIVIDE}, {"KP_PLUSMINUS", SDL_SCANCODE_KP_PLUSMINUS}, {"KP_CLEAR", SDL_SCANCODE_KP_CLEAR}, {"KP_CLEARENTRY", SDL_SCANCODE_KP_CLEARENTRY}, {"KP_BINARY", SDL_SCANCODE_KP_BINARY}, {"KP_OCTAL", SDL_SCANCODE_KP_OCTAL}, {"KP_DECIMAL", SDL_SCANCODE_KP_DECIMAL}, {"KP_HEXADECIMAL", SDL_SCANCODE_KP_HEXADECIMAL}, {"LCTRL", SDL_SCANCODE_LCTRL}, {"LSHIFT", SDL_SCANCODE_LSHIFT}, {"LALT", SDL_SCANCODE_LALT}, {"LGUI", SDL_SCANCODE_LGUI}, {"RCTRL", SDL_SCANCODE_RCTRL}, {"RSHIFT", SDL_SCANCODE_RSHIFT}, {"RALT", SDL_SCANCODE_RALT}, {"RGUI", SDL_SCANCODE_RGUI}, {"MODE", SDL_SCANCODE_MODE}, {"AUDIONEXT", SDL_SCANCODE_AUDIONEXT}, {"AUDIOPREV", SDL_SCANCODE_AUDIOPREV}, {"AUDIOSTOP", SDL_SCANCODE_AUDIOSTOP}, {"AUDIOPLAY", SDL_SCANCODE_AUDIOPLAY}, {"AUDIOMUTE", SDL_SCANCODE_AUDIOMUTE}, {"MEDIASELECT", SDL_SCANCODE_MEDIASELECT}, {"WWW", SDL_SCANCODE_WWW}, {"MAIL", SDL_SCANCODE_MAIL}, {"CALCULATOR", SDL_SCANCODE_CALCULATOR}, {"COMPUTER", SDL_SCANCODE_COMPUTER}, {"AC_SEARCH", SDL_SCANCODE_AC_SEARCH}, {"AC_HOME", SDL_SCANCODE_AC_HOME}, {"AC_BACK", SDL_SCANCODE_AC_BACK}, {"AC_FORWARD", SDL_SCANCODE_AC_FORWARD}, {"AC_STOP", SDL_SCANCODE_AC_STOP}, {"AC_REFRESH", SDL_SCANCODE_AC_REFRESH}, {"AC_BOOKMARKS", SDL_SCANCODE_AC_BOOKMARKS}, {"BRIGHTNESSDOWN", SDL_SCANCODE_BRIGHTNESSDOWN}, {"BRIGHTNESSUP", SDL_SCANCODE_BRIGHTNESSUP}, {"DISPLAYSWITCH", SDL_SCANCODE_DISPLAYSWITCH}, {"KBDILLUMTOGGLE", SDL_SCANCODE_KBDILLUMTOGGLE}, {"KBDILLUMDOWN", SDL_SCANCODE_KBDILLUMDOWN}, {"KBDILLUMUP", SDL_SCANCODE_KBDILLUMUP}, {"EJECT", SDL_SCANCODE_EJECT}, {"SLEEP", SDL_SCANCODE_SLEEP}, {"APP1", SDL_SCANCODE_APP1}, {"APP2", SDL_SCANCODE_APP2}, {"AUDIOREWIND", SDL_SCANCODE_AUDIOREWIND}, {"AUDIOFASTFORWARD", SDL_SCANCODE_AUDIOFASTFORWARD}, {"NUM_SCANCODES", SDL_NUM_SCANCODES}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, SDL_GameControllerButton) {
		auto luaType = EnumTypeLuaClassDefinition(SDL_GameControllerButton, "GamepadButton", {{"INVALID", SDL_CONTROLLER_BUTTON_INVALID}, {"A", SDL_CONTROLLER_BUTTON_A}, {"B", SDL_CONTROLLER_BUTTON_B}, {"X", SDL_CONTROLLER_BUTTON_X}, {"Y", SDL_CONTROLLER_BUTTON_Y}, {"BACK", SDL_CONTROLLER_BUTTON_BACK}, {"GUIDE", SDL_CONTROLLER_BUTTON_GUIDE}, {"START", SDL_CONTROLLER_BUTTON_START}, {"LEFTSTICK", SDL_CONTROLLER_BUTTON_LEFTSTICK}, {"RIGHTSTICK", SDL_CONTROLLER_BUTTON_RIGHTSTICK}, {"LEFTSHOULDER", SDL_CONTROLLER_BUTTON_LEFTSHOULDER}, {"RIGHTSHOULDER", SDL_CONTROLLER_BUTTON_RIGHTSHOULDER}, {"DPAD_UP", SDL_CONTROLLER_BUTTON_DPAD_UP}, {"DPAD_DOWN", SDL_CONTROLLER_BUTTON_DPAD_DOWN}, {"DPAD_LEFT", SDL_CONTROLLER_BUTTON_DPAD_LEFT}, {"DPAD_RIGHT", SDL_CONTROLLER_BUTTON_DPAD_RIGHT}, {"MAX", SDL_CONTROLLER_BUTTON_MAX}});
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	LuaBindingRegisterFunctionDefinitionForType(InputLuaBindings, SDL_GameControllerAxis) {
		auto luaType = EnumTypeLuaClassDefinition(SDL_GameControllerAxis, "GamepadAxis", {{"INVALID", SDL_CONTROLLER_AXIS_INVALID}, {"LEFTX", SDL_CONTROLLER_AXIS_LEFTX}, {"LEFTY", SDL_CONTROLLER_AXIS_LEFTY}, {"RIGHTX", SDL_CONTROLLER_AXIS_RIGHTX}, {"RIGHTY", SDL_CONTROLLER_AXIS_RIGHTY}, {"TRIGGERLEFT", SDL_CONTROLLER_AXIS_TRIGGERLEFT}, {"TRIGGERRIGHT", SDL_CONTROLLER_AXIS_TRIGGERRIGHT}, {"MAX", SDL_CONTROLLER_AXIS_MAX}});
	}
} // namespace RTE